\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{timeRS}
  [2017/10/08 v1.2.0 Bundle of packages for working with dates and times by Robin Schneider]

\RequirePackage{
  iftex,
  IfconstructsRS,
}

%\RequirePackage{scrtime}

%% isodate (((
% \RequirePackage[ngerman]{isodate}
%% Not working with LuaLaTeX
%% Does not help much because isodate detects the currently active language which is good.
%% Patching is not really required.
%% Package isodate Warning: Language german unknown to isodate.
%% (isodate)                Using default format on input line 85.
\RequirePackage{isodate}

%% Ugly hack to make german the default language for isodate in case when language detection fails e.g. with LuaLaTeX. Use from document.

\ifLuaTeX%
\iflanguageloaded{ngerman}{
  \def\CurrentOption{german}
  \input{german.idf}
}{}
\fi

% \@namedef{iso@rangesign@english}{~s to~}%

%% Testing
% \daymonthsepgerman{}%
% \monthyearsepgerman{}{}%
% biblatex has his own definitions …

%% Use:
%% \printdate{2015-05-13}
%% \daterange{2015-05-18}{2015-05-22}
%% )))

%% Keep it simple and standardized. No more legacy anymore. ISO 8601 is an international standard.
\RequirePackage[iso]{datetime}  %% only \pdfdate and \currenttime or \the\currentsecond
%% May switch to datetime2, some features provided by isodate are not (yet) covered in datetime2.

\RequirePackage{datenumber}
\RequirePackage{calcage}
% \RequirePackage{calctime}

% \RequirePackage{clock}    % \clocktime \clock{14}{00}
% \ClockStyle=1
% \ClockFramefalse%
%\bigclockfont      %% Führt zu endlos Schleife
%% besser \fontsize{60pt}{30pt}\selectfont verwenden
%% \scalebox{78}{} ...

%% Datum
\newcommand{\printDate}[3]{%% {year}{month}{day}
  % \setdatenumber{#1}{#2}{#3}\datedayname, \printdate{#3.#2.#1}%
  \formatdate{#3}{#2}{#1}%
}

\newcommand{\toDay}{\printDate{\the\year}{\the\month}{\the\day}}

\newcommand{\dateNValue}[1]{\addtocounter{datenumber}{#1}\setdatebynumber{\thedatenumber}}

\newcommand{\dateNday}[1]{\setdatetoday\dateNValue{#1}\datedate}
\newcommand{\dateNDay}[1]{\setdatetoday\dateNValue{#1}\datedayname, \datedate}

\newcommand{\dateNd}[4]{\setdate{#1}{#2}{#3}\dateNValue{#4}\datedate}
\newcommand{\dateND}[4]{\setdate{#1}{#2}{#3}\dateNValue{#4}\datedayname, \datedate}

\newcounter{dateone}\newcounter{datetwo}
\newcommand{\daydiffValue}[6]{\setmydatenumber{dateone}{#1}{#2}{#3}\setmydatenumber{datetwo}{#4}{#5}{#6}}
\newcommand{\daydiffValueU}[6]{\setmydatenumber{datetwo}{#1}{#2}{#3}\setmydatenumber{dateone}{#4}{#5}{#6}}

\newcommand{\daydiffCValue}[6]{\daydiffValue{#1}{#2}{#3}{#4}{#5}{#6}\addtocounter{datetwo}{-\thedateone}}
\newcommand{\daydiffCValueU}[6]{\daydiffValueU{#1}{#2}{#3}{#4}{#5}{#6}\addtocounter{datetwo}{-\thedateone}}

\newcommand{\daydiff}[6]{\daydiffCValue{#1}{#2}{#3}{#4}{#5}{#6}\thedatetwo}
\newcommand{\daydiffU}[6]{\daydiffCValueU{#1}{#2}{#3}{#4}{#5}{#6}\thedatetwo}
\newcommand{\daydiffRot}[6]{\daydiffValue{#1}{#2}{#3}{#4}{#5}{#6}%
  \ifthenelse{\value{dateone} > \value{datetwo}}{\addtocounter{datetwo}{-\thedateone}\textcolor{red}{\thedatetwo}}%
  {\addtocounter{datetwo}{-\thedateone}\thedatetwo}%
}%
\newcommand{\daydiffURot}[6]{\daydiffValueU{#1}{#2}{#3}{#4}{#5}{#6}%
  \ifthenelse{\value{dateone} > \value{datetwo}}{\addtocounter{datetwo}{-\thedateone}\textcolor{red}%
  {\thedatetwo}}{\addtocounter{datetwo}{-\thedateone}\thedatetwo}%
}%


\newcommand{\daydiffCValuetoday}[3]{\daydiffCValue{\the\year}{\the\month}{\the\day}{#1}{#2}{#3}}
\newcommand{\daydiffCValuetodayU}[3]{\daydiffCValueU{\the\year}{\the\month}{\the\day}{#1}{#2}{#3}}
\newcommand{\daydifftoday}[3]{\daydiff{\the\year}{\the\month}{\the\day}{#1}{#2}{#3}}
\newcommand{\daydifftodayU}[3]{\daydiffU{\the\year}{\the\month}{\the\day}{#1}{#2}{#3}}
\newcommand{\daydifftodayRot}[3]{\daydiffRot{\the\year}{\the\month}{\the\day}{#1}{#2}{#3}}
\newcommand{\daydifftodayURot}[3]{\daydiffURot{\the\year}{\the\month}{\the\day}{#1}{#2}{#3}}

\endinput
